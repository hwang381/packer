// Code generated by "mapstructure-to-hcl2 -type ImageConfig"; DO NOT EDIT.
package openstack

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

type FlatImageConfig struct {
	ImageName       string            `mapstructure:"image_name" required:"true" cty:"image_name"`
	ImageMetadata   map[string]string `mapstructure:"metadata" required:"false" cty:"metadata"`
	ImageVisibility string            `mapstructure:"image_visibility" required:"false" cty:"image_visibility"`
	ImageMembers    []string          `mapstructure:"image_members" required:"false" cty:"image_members"`
	ImageDiskFormat string            `mapstructure:"image_disk_format" required:"false" cty:"image_disk_format"`
	ImageTags       []string          `mapstructure:"image_tags" required:"false" cty:"image_tags"`
	ImageMinDisk    int               `mapstructure:"image_min_disk" required:"false" cty:"image_min_disk"`
}

func (*ImageConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"ImageName":       &hcldec.AttrSpec{Name: "image_name", Type: cty.String, Required: false},
		"ImageMetadata":   &hcldec.BlockAttrsSpec{TypeName: "metadata", ElementType: cty.String, Required: false},
		"ImageVisibility": &hcldec.AttrSpec{Name: "image_visibility", Type: cty.String, Required: false},
		"ImageMembers":    &hcldec.AttrSpec{Name: "image_members", Type: cty.List(cty.String), Required: false},
		"ImageDiskFormat": &hcldec.AttrSpec{Name: "image_disk_format", Type: cty.String, Required: false},
		"ImageTags":       &hcldec.AttrSpec{Name: "image_tags", Type: cty.List(cty.String), Required: false},
		"ImageMinDisk":    &hcldec.AttrSpec{Name: "image_min_disk", Type: cty.Number, Required: false},
	}
	return s
}

type FlatImageConfig struct {
	ImageName       string            `mapstructure:"image_name" required:"true" cty:"image_name"`
	ImageMetadata   map[string]string `mapstructure:"metadata" required:"false" cty:"metadata"`
	ImageVisibility string            `mapstructure:"image_visibility" required:"false" cty:"image_visibility"`
	ImageMembers    []string          `mapstructure:"image_members" required:"false" cty:"image_members"`
	ImageDiskFormat string            `mapstructure:"image_disk_format" required:"false" cty:"image_disk_format"`
	ImageTags       []string          `mapstructure:"image_tags" required:"false" cty:"image_tags"`
	ImageMinDisk    int               `mapstructure:"image_min_disk" required:"false" cty:"image_min_disk"`
}

func (*ImageConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"ImageName":       &hcldec.AttrSpec{Name: "image_name", Type: cty.String, Required: false},
		"ImageMetadata":   &hcldec.BlockAttrsSpec{TypeName: "metadata", ElementType: cty.String, Required: false},
		"ImageVisibility": &hcldec.AttrSpec{Name: "image_visibility", Type: cty.String, Required: false},
		"ImageMembers":    &hcldec.AttrSpec{Name: "image_members", Type: cty.List(cty.String), Required: false},
		"ImageDiskFormat": &hcldec.AttrSpec{Name: "image_disk_format", Type: cty.String, Required: false},
		"ImageTags":       &hcldec.AttrSpec{Name: "image_tags", Type: cty.List(cty.String), Required: false},
		"ImageMinDisk":    &hcldec.AttrSpec{Name: "image_min_disk", Type: cty.Number, Required: false},
	}
	return s
}
