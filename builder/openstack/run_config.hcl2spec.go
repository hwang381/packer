// Code generated by "mapstructure-to-hcl2 -type RunConfig,ImageFilter,ImageFilterOptions"; DO NOT EDIT.
package openstack

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
	"time"
)

type FlatImageFilterOptions struct {
	Name       string            `mapstructure:"name" cty:"name"`
	Owner      string            `mapstructure:"owner" cty:"owner"`
	Tags       []string          `mapstructure:"tags" cty:"tags"`
	Visibility string            `mapstructure:"visibility" cty:"visibility"`
	Properties map[string]string `mapstructure:"properties" cty:"properties"`
}

func (*ImageFilterOptions) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"Name":       &hcldec.AttrSpec{Name: "name", Type: cty.String, Required: false},
		"Owner":      &hcldec.AttrSpec{Name: "owner", Type: cty.String, Required: false},
		"Tags":       &hcldec.AttrSpec{Name: "tags", Type: cty.List(cty.String), Required: false},
		"Visibility": &hcldec.AttrSpec{Name: "visibility", Type: cty.String, Required: false},
		"Properties": &hcldec.BlockAttrsSpec{TypeName: "properties", ElementType: cty.String, Required: false},
	}
	return s
}

type FlatRunConfig struct {
	Type                      string            `mapstructure:"communicator" cty:"communicator"`
	PauseBeforeConnect        time.Duration     `mapstructure:"pause_before_connecting" cty:"pause_before_connecting"`
	SSHHost                   string            `mapstructure:"ssh_host" cty:"ssh_host"`
	SSHPort                   int               `mapstructure:"ssh_port" cty:"ssh_port"`
	SSHUsername               string            `mapstructure:"ssh_username" cty:"ssh_username"`
	SSHPassword               string            `mapstructure:"ssh_password" cty:"ssh_password"`
	SSHKeyPairName            string            `mapstructure:"ssh_keypair_name" cty:"ssh_keypair_name"`
	SSHTemporaryKeyPairName   string            `mapstructure:"temporary_key_pair_name" cty:"temporary_key_pair_name"`
	SSHClearAuthorizedKeys    bool              `mapstructure:"ssh_clear_authorized_keys" cty:"ssh_clear_authorized_keys"`
	SSHPrivateKeyFile         string            `mapstructure:"ssh_private_key_file" cty:"ssh_private_key_file"`
	SSHPty                    bool              `mapstructure:"ssh_pty" cty:"ssh_pty"`
	SSHTimeout                time.Duration     `mapstructure:"ssh_timeout" cty:"ssh_timeout"`
	SSHAgentAuth              bool              `mapstructure:"ssh_agent_auth" cty:"ssh_agent_auth"`
	SSHDisableAgentForwarding bool              `mapstructure:"ssh_disable_agent_forwarding" cty:"ssh_disable_agent_forwarding"`
	SSHHandshakeAttempts      int               `mapstructure:"ssh_handshake_attempts" cty:"ssh_handshake_attempts"`
	SSHBastionHost            string            `mapstructure:"ssh_bastion_host" cty:"ssh_bastion_host"`
	SSHBastionPort            int               `mapstructure:"ssh_bastion_port" cty:"ssh_bastion_port"`
	SSHBastionAgentAuth       bool              `mapstructure:"ssh_bastion_agent_auth" cty:"ssh_bastion_agent_auth"`
	SSHBastionUsername        string            `mapstructure:"ssh_bastion_username" cty:"ssh_bastion_username"`
	SSHBastionPassword        string            `mapstructure:"ssh_bastion_password" cty:"ssh_bastion_password"`
	SSHBastionPrivateKeyFile  string            `mapstructure:"ssh_bastion_private_key_file" cty:"ssh_bastion_private_key_file"`
	SSHFileTransferMethod     string            `mapstructure:"ssh_file_transfer_method" cty:"ssh_file_transfer_method"`
	SSHProxyHost              string            `mapstructure:"ssh_proxy_host" cty:"ssh_proxy_host"`
	SSHProxyPort              int               `mapstructure:"ssh_proxy_port" cty:"ssh_proxy_port"`
	SSHProxyUsername          string            `mapstructure:"ssh_proxy_username" cty:"ssh_proxy_username"`
	SSHProxyPassword          string            `mapstructure:"ssh_proxy_password" cty:"ssh_proxy_password"`
	SSHKeepAliveInterval      time.Duration     `mapstructure:"ssh_keep_alive_interval" cty:"ssh_keep_alive_interval"`
	SSHReadWriteTimeout       time.Duration     `mapstructure:"ssh_read_write_timeout" cty:"ssh_read_write_timeout"`
	SSHRemoteTunnels          []string          `mapstructure:"ssh_remote_tunnels" cty:"ssh_remote_tunnels"`
	SSHLocalTunnels           []string          `mapstructure:"ssh_local_tunnels" cty:"ssh_local_tunnels"`
	SSHPublicKey              []byte            `cty:"ssh_public_key"`
	SSHPrivateKey             []byte            `cty:"ssh_private_key"`
	WinRMUser                 string            `mapstructure:"winrm_username" cty:"winrm_username"`
	WinRMPassword             string            `mapstructure:"winrm_password" cty:"winrm_password"`
	WinRMHost                 string            `mapstructure:"winrm_host" cty:"winrm_host"`
	WinRMPort                 int               `mapstructure:"winrm_port" cty:"winrm_port"`
	WinRMTimeout              time.Duration     `mapstructure:"winrm_timeout" cty:"winrm_timeout"`
	WinRMUseSSL               bool              `mapstructure:"winrm_use_ssl" cty:"winrm_use_ssl"`
	WinRMInsecure             bool              `mapstructure:"winrm_insecure" cty:"winrm_insecure"`
	WinRMUseNTLM              bool              `mapstructure:"winrm_use_ntlm" cty:"winrm_use_ntlm"`
	SSHInterface              string            `mapstructure:"ssh_interface" required:"false" cty:"ssh_interface"`
	SSHIPVersion              string            `mapstructure:"ssh_ip_version" required:"false" cty:"ssh_ip_version"`
	SourceImage               string            `mapstructure:"source_image" required:"true" cty:"source_image"`
	SourceImageName           string            `mapstructure:"source_image_name" required:"true" cty:"source_image_name"`
	SourceImageFilters        ImageFilter       `mapstructure:"source_image_filter" required:"true" cty:"source_image_filter"`
	Flavor                    string            `mapstructure:"flavor" required:"true" cty:"flavor"`
	AvailabilityZone          string            `mapstructure:"availability_zone" required:"false" cty:"availability_zone"`
	RackconnectWait           bool              `mapstructure:"rackconnect_wait" required:"false" cty:"rackconnect_wait"`
	FloatingIPNetwork         string            `mapstructure:"floating_ip_network" required:"false" cty:"floating_ip_network"`
	InstanceFloatingIPNet     string            `mapstructure:"instance_floating_ip_net" required:"false" cty:"instance_floating_ip_net"`
	FloatingIP                string            `mapstructure:"floating_ip" required:"false" cty:"floating_ip"`
	ReuseIPs                  bool              `mapstructure:"reuse_ips" required:"false" cty:"reuse_ips"`
	SecurityGroups            []string          `mapstructure:"security_groups" required:"false" cty:"security_groups"`
	Networks                  []string          `mapstructure:"networks" required:"false" cty:"networks"`
	Ports                     []string          `mapstructure:"ports" required:"false" cty:"ports"`
	UserData                  string            `mapstructure:"user_data" required:"false" cty:"user_data"`
	UserDataFile              string            `mapstructure:"user_data_file" required:"false" cty:"user_data_file"`
	InstanceName              string            `mapstructure:"instance_name" required:"false" cty:"instance_name"`
	InstanceMetadata          map[string]string `mapstructure:"instance_metadata" required:"false" cty:"instance_metadata"`
	ForceDelete               bool              `mapstructure:"force_delete" required:"false" cty:"force_delete"`
	ConfigDrive               bool              `mapstructure:"config_drive" required:"false" cty:"config_drive"`
	FloatingIPPool            string            `mapstructure:"floating_ip_pool" required:"false" cty:"floating_ip_pool"`
	UseBlockStorageVolume     bool              `mapstructure:"use_blockstorage_volume" required:"false" cty:"use_blockstorage_volume"`
	VolumeName                string            `mapstructure:"volume_name" required:"false" cty:"volume_name"`
	VolumeType                string            `mapstructure:"volume_type" required:"false" cty:"volume_type"`
	VolumeSize                int               `mapstructure:"volume_size" required:"false" cty:"volume_size"`
	VolumeAvailabilityZone    string            `mapstructure:"volume_availability_zone" required:"false" cty:"volume_availability_zone"`
	OpenstackProvider         string            `mapstructure:"openstack_provider" cty:"openstack_provider"`
	UseFloatingIp             bool              `mapstructure:"use_floating_ip" required:"false" cty:"use_floating_ip"`
}

func (*RunConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"Type":                      &hcldec.AttrSpec{Name: "communicator", Type: cty.String, Required: false},
		"PauseBeforeConnect":        &hcldec.AttrSpec{Name: "pause_before_connecting", Type: cty.String, Required: false},
		"SSHHost":                   &hcldec.AttrSpec{Name: "ssh_host", Type: cty.String, Required: false},
		"SSHPort":                   &hcldec.AttrSpec{Name: "ssh_port", Type: cty.Number, Required: false},
		"SSHUsername":               &hcldec.AttrSpec{Name: "ssh_username", Type: cty.String, Required: false},
		"SSHPassword":               &hcldec.AttrSpec{Name: "ssh_password", Type: cty.String, Required: false},
		"SSHKeyPairName":            &hcldec.AttrSpec{Name: "ssh_keypair_name", Type: cty.String, Required: false},
		"SSHTemporaryKeyPairName":   &hcldec.AttrSpec{Name: "temporary_key_pair_name", Type: cty.String, Required: false},
		"SSHClearAuthorizedKeys":    &hcldec.AttrSpec{Name: "ssh_clear_authorized_keys", Type: cty.Bool, Required: false},
		"SSHPrivateKeyFile":         &hcldec.AttrSpec{Name: "ssh_private_key_file", Type: cty.String, Required: false},
		"SSHPty":                    &hcldec.AttrSpec{Name: "ssh_pty", Type: cty.Bool, Required: false},
		"SSHTimeout":                &hcldec.AttrSpec{Name: "ssh_timeout", Type: cty.String, Required: false},
		"SSHAgentAuth":              &hcldec.AttrSpec{Name: "ssh_agent_auth", Type: cty.Bool, Required: false},
		"SSHDisableAgentForwarding": &hcldec.AttrSpec{Name: "ssh_disable_agent_forwarding", Type: cty.Bool, Required: false},
		"SSHHandshakeAttempts":      &hcldec.AttrSpec{Name: "ssh_handshake_attempts", Type: cty.Number, Required: false},
		"SSHBastionHost":            &hcldec.AttrSpec{Name: "ssh_bastion_host", Type: cty.String, Required: false},
		"SSHBastionPort":            &hcldec.AttrSpec{Name: "ssh_bastion_port", Type: cty.Number, Required: false},
		"SSHBastionAgentAuth":       &hcldec.AttrSpec{Name: "ssh_bastion_agent_auth", Type: cty.Bool, Required: false},
		"SSHBastionUsername":        &hcldec.AttrSpec{Name: "ssh_bastion_username", Type: cty.String, Required: false},
		"SSHBastionPassword":        &hcldec.AttrSpec{Name: "ssh_bastion_password", Type: cty.String, Required: false},
		"SSHBastionPrivateKeyFile":  &hcldec.AttrSpec{Name: "ssh_bastion_private_key_file", Type: cty.String, Required: false},
		"SSHFileTransferMethod":     &hcldec.AttrSpec{Name: "ssh_file_transfer_method", Type: cty.String, Required: false},
		"SSHProxyHost":              &hcldec.AttrSpec{Name: "ssh_proxy_host", Type: cty.String, Required: false},
		"SSHProxyPort":              &hcldec.AttrSpec{Name: "ssh_proxy_port", Type: cty.Number, Required: false},
		"SSHProxyUsername":          &hcldec.AttrSpec{Name: "ssh_proxy_username", Type: cty.String, Required: false},
		"SSHProxyPassword":          &hcldec.AttrSpec{Name: "ssh_proxy_password", Type: cty.String, Required: false},
		"SSHKeepAliveInterval":      &hcldec.AttrSpec{Name: "ssh_keep_alive_interval", Type: cty.String, Required: false},
		"SSHReadWriteTimeout":       &hcldec.AttrSpec{Name: "ssh_read_write_timeout", Type: cty.String, Required: false},
		"SSHRemoteTunnels":          &hcldec.AttrSpec{Name: "ssh_remote_tunnels", Type: cty.List(cty.String), Required: false},
		"SSHLocalTunnels":           &hcldec.AttrSpec{Name: "ssh_local_tunnels", Type: cty.List(cty.String), Required: false},
		"SSHPublicKey":              &hcldec.AttrSpec{Name: "ssh_public_key", Type: cty.List(cty.Number), Required: false},
		"SSHPrivateKey":             &hcldec.AttrSpec{Name: "ssh_private_key", Type: cty.List(cty.Number), Required: false},
		"WinRMUser":                 &hcldec.AttrSpec{Name: "winrm_username", Type: cty.String, Required: false},
		"WinRMPassword":             &hcldec.AttrSpec{Name: "winrm_password", Type: cty.String, Required: false},
		"WinRMHost":                 &hcldec.AttrSpec{Name: "winrm_host", Type: cty.String, Required: false},
		"WinRMPort":                 &hcldec.AttrSpec{Name: "winrm_port", Type: cty.Number, Required: false},
		"WinRMTimeout":              &hcldec.AttrSpec{Name: "winrm_timeout", Type: cty.String, Required: false},
		"WinRMUseSSL":               &hcldec.AttrSpec{Name: "winrm_use_ssl", Type: cty.Bool, Required: false},
		"WinRMInsecure":             &hcldec.AttrSpec{Name: "winrm_insecure", Type: cty.Bool, Required: false},
		"WinRMUseNTLM":              &hcldec.AttrSpec{Name: "winrm_use_ntlm", Type: cty.Bool, Required: false},
		"SSHInterface":              &hcldec.AttrSpec{Name: "ssh_interface", Type: cty.String, Required: false},
		"SSHIPVersion":              &hcldec.AttrSpec{Name: "ssh_ip_version", Type: cty.String, Required: false},
		"SourceImage":               &hcldec.AttrSpec{Name: "source_image", Type: cty.String, Required: false},
		"SourceImageName":           &hcldec.AttrSpec{Name: "source_image_name", Type: cty.String, Required: false},
		"SourceImageFilters":        &hcldec.BlockObjectSpec{TypeName: "ImageFilter", Nested: hcldec.ObjectSpec((*ImageFilter)(nil).HCL2Spec())},
		"Flavor":                    &hcldec.AttrSpec{Name: "flavor", Type: cty.String, Required: false},
		"AvailabilityZone":          &hcldec.AttrSpec{Name: "availability_zone", Type: cty.String, Required: false},
		"RackconnectWait":           &hcldec.AttrSpec{Name: "rackconnect_wait", Type: cty.Bool, Required: false},
		"FloatingIPNetwork":         &hcldec.AttrSpec{Name: "floating_ip_network", Type: cty.String, Required: false},
		"InstanceFloatingIPNet":     &hcldec.AttrSpec{Name: "instance_floating_ip_net", Type: cty.String, Required: false},
		"FloatingIP":                &hcldec.AttrSpec{Name: "floating_ip", Type: cty.String, Required: false},
		"ReuseIPs":                  &hcldec.AttrSpec{Name: "reuse_ips", Type: cty.Bool, Required: false},
		"SecurityGroups":            &hcldec.AttrSpec{Name: "security_groups", Type: cty.List(cty.String), Required: false},
		"Networks":                  &hcldec.AttrSpec{Name: "networks", Type: cty.List(cty.String), Required: false},
		"Ports":                     &hcldec.AttrSpec{Name: "ports", Type: cty.List(cty.String), Required: false},
		"UserData":                  &hcldec.AttrSpec{Name: "user_data", Type: cty.String, Required: false},
		"UserDataFile":              &hcldec.AttrSpec{Name: "user_data_file", Type: cty.String, Required: false},
		"InstanceName":              &hcldec.AttrSpec{Name: "instance_name", Type: cty.String, Required: false},
		"InstanceMetadata":          &hcldec.BlockAttrsSpec{TypeName: "instance_metadata", ElementType: cty.String, Required: false},
		"ForceDelete":               &hcldec.AttrSpec{Name: "force_delete", Type: cty.Bool, Required: false},
		"ConfigDrive":               &hcldec.AttrSpec{Name: "config_drive", Type: cty.Bool, Required: false},
		"FloatingIPPool":            &hcldec.AttrSpec{Name: "floating_ip_pool", Type: cty.String, Required: false},
		"UseBlockStorageVolume":     &hcldec.AttrSpec{Name: "use_blockstorage_volume", Type: cty.Bool, Required: false},
		"VolumeName":                &hcldec.AttrSpec{Name: "volume_name", Type: cty.String, Required: false},
		"VolumeType":                &hcldec.AttrSpec{Name: "volume_type", Type: cty.String, Required: false},
		"VolumeSize":                &hcldec.AttrSpec{Name: "volume_size", Type: cty.Number, Required: false},
		"VolumeAvailabilityZone":    &hcldec.AttrSpec{Name: "volume_availability_zone", Type: cty.String, Required: false},
		"OpenstackProvider":         &hcldec.AttrSpec{Name: "openstack_provider", Type: cty.String, Required: false},
		"UseFloatingIp":             &hcldec.AttrSpec{Name: "use_floating_ip", Type: cty.Bool, Required: false},
	}
	return s
}

type FlatImageFilter struct {
	Filters    ImageFilterOptions `mapstructure:"filters" required:"false" cty:"filters"`
	MostRecent bool               `mapstructure:"most_recent" required:"false" cty:"most_recent"`
}

func (*ImageFilter) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"Filters":    &hcldec.BlockObjectSpec{TypeName: "ImageFilterOptions", Nested: hcldec.ObjectSpec((*ImageFilterOptions)(nil).HCL2Spec())},
		"MostRecent": &hcldec.AttrSpec{Name: "most_recent", Type: cty.Bool, Required: false},
	}
	return s
}

type FlatRunConfig struct {
	Type                      string            `mapstructure:"communicator" cty:"communicator"`
	PauseBeforeConnect        time.Duration     `mapstructure:"pause_before_connecting" cty:"pause_before_connecting"`
	SSHHost                   string            `mapstructure:"ssh_host" cty:"ssh_host"`
	SSHPort                   int               `mapstructure:"ssh_port" cty:"ssh_port"`
	SSHUsername               string            `mapstructure:"ssh_username" cty:"ssh_username"`
	SSHPassword               string            `mapstructure:"ssh_password" cty:"ssh_password"`
	SSHKeyPairName            string            `mapstructure:"ssh_keypair_name" cty:"ssh_keypair_name"`
	SSHTemporaryKeyPairName   string            `mapstructure:"temporary_key_pair_name" cty:"temporary_key_pair_name"`
	SSHClearAuthorizedKeys    bool              `mapstructure:"ssh_clear_authorized_keys" cty:"ssh_clear_authorized_keys"`
	SSHPrivateKeyFile         string            `mapstructure:"ssh_private_key_file" cty:"ssh_private_key_file"`
	SSHPty                    bool              `mapstructure:"ssh_pty" cty:"ssh_pty"`
	SSHTimeout                time.Duration     `mapstructure:"ssh_timeout" cty:"ssh_timeout"`
	SSHAgentAuth              bool              `mapstructure:"ssh_agent_auth" cty:"ssh_agent_auth"`
	SSHDisableAgentForwarding bool              `mapstructure:"ssh_disable_agent_forwarding" cty:"ssh_disable_agent_forwarding"`
	SSHHandshakeAttempts      int               `mapstructure:"ssh_handshake_attempts" cty:"ssh_handshake_attempts"`
	SSHBastionHost            string            `mapstructure:"ssh_bastion_host" cty:"ssh_bastion_host"`
	SSHBastionPort            int               `mapstructure:"ssh_bastion_port" cty:"ssh_bastion_port"`
	SSHBastionAgentAuth       bool              `mapstructure:"ssh_bastion_agent_auth" cty:"ssh_bastion_agent_auth"`
	SSHBastionUsername        string            `mapstructure:"ssh_bastion_username" cty:"ssh_bastion_username"`
	SSHBastionPassword        string            `mapstructure:"ssh_bastion_password" cty:"ssh_bastion_password"`
	SSHBastionPrivateKeyFile  string            `mapstructure:"ssh_bastion_private_key_file" cty:"ssh_bastion_private_key_file"`
	SSHFileTransferMethod     string            `mapstructure:"ssh_file_transfer_method" cty:"ssh_file_transfer_method"`
	SSHProxyHost              string            `mapstructure:"ssh_proxy_host" cty:"ssh_proxy_host"`
	SSHProxyPort              int               `mapstructure:"ssh_proxy_port" cty:"ssh_proxy_port"`
	SSHProxyUsername          string            `mapstructure:"ssh_proxy_username" cty:"ssh_proxy_username"`
	SSHProxyPassword          string            `mapstructure:"ssh_proxy_password" cty:"ssh_proxy_password"`
	SSHKeepAliveInterval      time.Duration     `mapstructure:"ssh_keep_alive_interval" cty:"ssh_keep_alive_interval"`
	SSHReadWriteTimeout       time.Duration     `mapstructure:"ssh_read_write_timeout" cty:"ssh_read_write_timeout"`
	SSHRemoteTunnels          []string          `mapstructure:"ssh_remote_tunnels" cty:"ssh_remote_tunnels"`
	SSHLocalTunnels           []string          `mapstructure:"ssh_local_tunnels" cty:"ssh_local_tunnels"`
	SSHPublicKey              []byte            `cty:"ssh_public_key"`
	SSHPrivateKey             []byte            `cty:"ssh_private_key"`
	WinRMUser                 string            `mapstructure:"winrm_username" cty:"winrm_username"`
	WinRMPassword             string            `mapstructure:"winrm_password" cty:"winrm_password"`
	WinRMHost                 string            `mapstructure:"winrm_host" cty:"winrm_host"`
	WinRMPort                 int               `mapstructure:"winrm_port" cty:"winrm_port"`
	WinRMTimeout              time.Duration     `mapstructure:"winrm_timeout" cty:"winrm_timeout"`
	WinRMUseSSL               bool              `mapstructure:"winrm_use_ssl" cty:"winrm_use_ssl"`
	WinRMInsecure             bool              `mapstructure:"winrm_insecure" cty:"winrm_insecure"`
	WinRMUseNTLM              bool              `mapstructure:"winrm_use_ntlm" cty:"winrm_use_ntlm"`
	SSHInterface              string            `mapstructure:"ssh_interface" required:"false" cty:"ssh_interface"`
	SSHIPVersion              string            `mapstructure:"ssh_ip_version" required:"false" cty:"ssh_ip_version"`
	SourceImage               string            `mapstructure:"source_image" required:"true" cty:"source_image"`
	SourceImageName           string            `mapstructure:"source_image_name" required:"true" cty:"source_image_name"`
	SourceImageFilters        ImageFilter       `mapstructure:"source_image_filter" required:"true" cty:"source_image_filter"`
	Flavor                    string            `mapstructure:"flavor" required:"true" cty:"flavor"`
	AvailabilityZone          string            `mapstructure:"availability_zone" required:"false" cty:"availability_zone"`
	RackconnectWait           bool              `mapstructure:"rackconnect_wait" required:"false" cty:"rackconnect_wait"`
	FloatingIPNetwork         string            `mapstructure:"floating_ip_network" required:"false" cty:"floating_ip_network"`
	InstanceFloatingIPNet     string            `mapstructure:"instance_floating_ip_net" required:"false" cty:"instance_floating_ip_net"`
	FloatingIP                string            `mapstructure:"floating_ip" required:"false" cty:"floating_ip"`
	ReuseIPs                  bool              `mapstructure:"reuse_ips" required:"false" cty:"reuse_ips"`
	SecurityGroups            []string          `mapstructure:"security_groups" required:"false" cty:"security_groups"`
	Networks                  []string          `mapstructure:"networks" required:"false" cty:"networks"`
	Ports                     []string          `mapstructure:"ports" required:"false" cty:"ports"`
	UserData                  string            `mapstructure:"user_data" required:"false" cty:"user_data"`
	UserDataFile              string            `mapstructure:"user_data_file" required:"false" cty:"user_data_file"`
	InstanceName              string            `mapstructure:"instance_name" required:"false" cty:"instance_name"`
	InstanceMetadata          map[string]string `mapstructure:"instance_metadata" required:"false" cty:"instance_metadata"`
	ForceDelete               bool              `mapstructure:"force_delete" required:"false" cty:"force_delete"`
	ConfigDrive               bool              `mapstructure:"config_drive" required:"false" cty:"config_drive"`
	FloatingIPPool            string            `mapstructure:"floating_ip_pool" required:"false" cty:"floating_ip_pool"`
	UseBlockStorageVolume     bool              `mapstructure:"use_blockstorage_volume" required:"false" cty:"use_blockstorage_volume"`
	VolumeName                string            `mapstructure:"volume_name" required:"false" cty:"volume_name"`
	VolumeType                string            `mapstructure:"volume_type" required:"false" cty:"volume_type"`
	VolumeSize                int               `mapstructure:"volume_size" required:"false" cty:"volume_size"`
	VolumeAvailabilityZone    string            `mapstructure:"volume_availability_zone" required:"false" cty:"volume_availability_zone"`
	OpenstackProvider         string            `mapstructure:"openstack_provider" cty:"openstack_provider"`
	UseFloatingIp             bool              `mapstructure:"use_floating_ip" required:"false" cty:"use_floating_ip"`
}

func (*RunConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"Type":                      &hcldec.AttrSpec{Name: "communicator", Type: cty.String, Required: false},
		"PauseBeforeConnect":        &hcldec.AttrSpec{Name: "pause_before_connecting", Type: cty.String, Required: false},
		"SSHHost":                   &hcldec.AttrSpec{Name: "ssh_host", Type: cty.String, Required: false},
		"SSHPort":                   &hcldec.AttrSpec{Name: "ssh_port", Type: cty.Number, Required: false},
		"SSHUsername":               &hcldec.AttrSpec{Name: "ssh_username", Type: cty.String, Required: false},
		"SSHPassword":               &hcldec.AttrSpec{Name: "ssh_password", Type: cty.String, Required: false},
		"SSHKeyPairName":            &hcldec.AttrSpec{Name: "ssh_keypair_name", Type: cty.String, Required: false},
		"SSHTemporaryKeyPairName":   &hcldec.AttrSpec{Name: "temporary_key_pair_name", Type: cty.String, Required: false},
		"SSHClearAuthorizedKeys":    &hcldec.AttrSpec{Name: "ssh_clear_authorized_keys", Type: cty.Bool, Required: false},
		"SSHPrivateKeyFile":         &hcldec.AttrSpec{Name: "ssh_private_key_file", Type: cty.String, Required: false},
		"SSHPty":                    &hcldec.AttrSpec{Name: "ssh_pty", Type: cty.Bool, Required: false},
		"SSHTimeout":                &hcldec.AttrSpec{Name: "ssh_timeout", Type: cty.String, Required: false},
		"SSHAgentAuth":              &hcldec.AttrSpec{Name: "ssh_agent_auth", Type: cty.Bool, Required: false},
		"SSHDisableAgentForwarding": &hcldec.AttrSpec{Name: "ssh_disable_agent_forwarding", Type: cty.Bool, Required: false},
		"SSHHandshakeAttempts":      &hcldec.AttrSpec{Name: "ssh_handshake_attempts", Type: cty.Number, Required: false},
		"SSHBastionHost":            &hcldec.AttrSpec{Name: "ssh_bastion_host", Type: cty.String, Required: false},
		"SSHBastionPort":            &hcldec.AttrSpec{Name: "ssh_bastion_port", Type: cty.Number, Required: false},
		"SSHBastionAgentAuth":       &hcldec.AttrSpec{Name: "ssh_bastion_agent_auth", Type: cty.Bool, Required: false},
		"SSHBastionUsername":        &hcldec.AttrSpec{Name: "ssh_bastion_username", Type: cty.String, Required: false},
		"SSHBastionPassword":        &hcldec.AttrSpec{Name: "ssh_bastion_password", Type: cty.String, Required: false},
		"SSHBastionPrivateKeyFile":  &hcldec.AttrSpec{Name: "ssh_bastion_private_key_file", Type: cty.String, Required: false},
		"SSHFileTransferMethod":     &hcldec.AttrSpec{Name: "ssh_file_transfer_method", Type: cty.String, Required: false},
		"SSHProxyHost":              &hcldec.AttrSpec{Name: "ssh_proxy_host", Type: cty.String, Required: false},
		"SSHProxyPort":              &hcldec.AttrSpec{Name: "ssh_proxy_port", Type: cty.Number, Required: false},
		"SSHProxyUsername":          &hcldec.AttrSpec{Name: "ssh_proxy_username", Type: cty.String, Required: false},
		"SSHProxyPassword":          &hcldec.AttrSpec{Name: "ssh_proxy_password", Type: cty.String, Required: false},
		"SSHKeepAliveInterval":      &hcldec.AttrSpec{Name: "ssh_keep_alive_interval", Type: cty.String, Required: false},
		"SSHReadWriteTimeout":       &hcldec.AttrSpec{Name: "ssh_read_write_timeout", Type: cty.String, Required: false},
		"SSHRemoteTunnels":          &hcldec.AttrSpec{Name: "ssh_remote_tunnels", Type: cty.List(cty.String), Required: false},
		"SSHLocalTunnels":           &hcldec.AttrSpec{Name: "ssh_local_tunnels", Type: cty.List(cty.String), Required: false},
		"SSHPublicKey":              &hcldec.AttrSpec{Name: "ssh_public_key", Type: cty.List(cty.Number), Required: false},
		"SSHPrivateKey":             &hcldec.AttrSpec{Name: "ssh_private_key", Type: cty.List(cty.Number), Required: false},
		"WinRMUser":                 &hcldec.AttrSpec{Name: "winrm_username", Type: cty.String, Required: false},
		"WinRMPassword":             &hcldec.AttrSpec{Name: "winrm_password", Type: cty.String, Required: false},
		"WinRMHost":                 &hcldec.AttrSpec{Name: "winrm_host", Type: cty.String, Required: false},
		"WinRMPort":                 &hcldec.AttrSpec{Name: "winrm_port", Type: cty.Number, Required: false},
		"WinRMTimeout":              &hcldec.AttrSpec{Name: "winrm_timeout", Type: cty.String, Required: false},
		"WinRMUseSSL":               &hcldec.AttrSpec{Name: "winrm_use_ssl", Type: cty.Bool, Required: false},
		"WinRMInsecure":             &hcldec.AttrSpec{Name: "winrm_insecure", Type: cty.Bool, Required: false},
		"WinRMUseNTLM":              &hcldec.AttrSpec{Name: "winrm_use_ntlm", Type: cty.Bool, Required: false},
		"SSHInterface":              &hcldec.AttrSpec{Name: "ssh_interface", Type: cty.String, Required: false},
		"SSHIPVersion":              &hcldec.AttrSpec{Name: "ssh_ip_version", Type: cty.String, Required: false},
		"SourceImage":               &hcldec.AttrSpec{Name: "source_image", Type: cty.String, Required: false},
		"SourceImageName":           &hcldec.AttrSpec{Name: "source_image_name", Type: cty.String, Required: false},
		"SourceImageFilters":        &hcldec.BlockObjectSpec{TypeName: "ImageFilter", Nested: hcldec.ObjectSpec((*ImageFilter)(nil).HCL2Spec())},
		"Flavor":                    &hcldec.AttrSpec{Name: "flavor", Type: cty.String, Required: false},
		"AvailabilityZone":          &hcldec.AttrSpec{Name: "availability_zone", Type: cty.String, Required: false},
		"RackconnectWait":           &hcldec.AttrSpec{Name: "rackconnect_wait", Type: cty.Bool, Required: false},
		"FloatingIPNetwork":         &hcldec.AttrSpec{Name: "floating_ip_network", Type: cty.String, Required: false},
		"InstanceFloatingIPNet":     &hcldec.AttrSpec{Name: "instance_floating_ip_net", Type: cty.String, Required: false},
		"FloatingIP":                &hcldec.AttrSpec{Name: "floating_ip", Type: cty.String, Required: false},
		"ReuseIPs":                  &hcldec.AttrSpec{Name: "reuse_ips", Type: cty.Bool, Required: false},
		"SecurityGroups":            &hcldec.AttrSpec{Name: "security_groups", Type: cty.List(cty.String), Required: false},
		"Networks":                  &hcldec.AttrSpec{Name: "networks", Type: cty.List(cty.String), Required: false},
		"Ports":                     &hcldec.AttrSpec{Name: "ports", Type: cty.List(cty.String), Required: false},
		"UserData":                  &hcldec.AttrSpec{Name: "user_data", Type: cty.String, Required: false},
		"UserDataFile":              &hcldec.AttrSpec{Name: "user_data_file", Type: cty.String, Required: false},
		"InstanceName":              &hcldec.AttrSpec{Name: "instance_name", Type: cty.String, Required: false},
		"InstanceMetadata":          &hcldec.BlockAttrsSpec{TypeName: "instance_metadata", ElementType: cty.String, Required: false},
		"ForceDelete":               &hcldec.AttrSpec{Name: "force_delete", Type: cty.Bool, Required: false},
		"ConfigDrive":               &hcldec.AttrSpec{Name: "config_drive", Type: cty.Bool, Required: false},
		"FloatingIPPool":            &hcldec.AttrSpec{Name: "floating_ip_pool", Type: cty.String, Required: false},
		"UseBlockStorageVolume":     &hcldec.AttrSpec{Name: "use_blockstorage_volume", Type: cty.Bool, Required: false},
		"VolumeName":                &hcldec.AttrSpec{Name: "volume_name", Type: cty.String, Required: false},
		"VolumeType":                &hcldec.AttrSpec{Name: "volume_type", Type: cty.String, Required: false},
		"VolumeSize":                &hcldec.AttrSpec{Name: "volume_size", Type: cty.Number, Required: false},
		"VolumeAvailabilityZone":    &hcldec.AttrSpec{Name: "volume_availability_zone", Type: cty.String, Required: false},
		"OpenstackProvider":         &hcldec.AttrSpec{Name: "openstack_provider", Type: cty.String, Required: false},
		"UseFloatingIp":             &hcldec.AttrSpec{Name: "use_floating_ip", Type: cty.Bool, Required: false},
	}
	return s
}
