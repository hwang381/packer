// Code generated by "mapstructure-to-hcl2 -type RunConfig,AmiFilterOptions,SecurityGroupFilterOptions,SubnetFilterOptions,VpcFilterOptions"; DO NOT EDIT.
package common

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
	"time"
)

type FlatAmiFilterOptions struct {
	Filters    map[*string]*string `cty:"filters"`
	Owners     []*string           `cty:"owners"`
	MostRecent bool                `mapstructure:"most_recent" cty:"most_recent"`
}

func (*AmiFilterOptions) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"Filters":    &hcldec.BlockAttrsSpec{TypeName: "filters", ElementType: cty.String, Required: false},
		"Owners":     nil, // slice ([]*string),
		"MostRecent": &hcldec.AttrSpec{Name: "most_recent", Type: cty.Bool, Required: false},
	}
	return s
}

type FlatRunConfig struct {
	AssociatePublicIpAddress          bool                       `mapstructure:"associate_public_ip_address" required:"false" cty:"associate_public_ip_address"`
	AvailabilityZone                  string                     `mapstructure:"availability_zone" required:"false" cty:"availability_zone"`
	BlockDurationMinutes              int64                      `mapstructure:"block_duration_minutes" required:"false" cty:"block_duration_minutes"`
	DisableStopInstance               bool                       `mapstructure:"disable_stop_instance" required:"false" cty:"disable_stop_instance"`
	EbsOptimized                      bool                       `mapstructure:"ebs_optimized" required:"false" cty:"ebs_optimized"`
	EnableT2Unlimited                 bool                       `mapstructure:"enable_t2_unlimited" required:"false" cty:"enable_t2_unlimited"`
	IamInstanceProfile                string                     `mapstructure:"iam_instance_profile" required:"false" cty:"iam_instance_profile"`
	InstanceInitiatedShutdownBehavior string                     `mapstructure:"shutdown_behavior" required:"false" cty:"shutdown_behavior"`
	InstanceType                      string                     `mapstructure:"instance_type" required:"true" cty:"instance_type"`
	SecurityGroupFilter               SecurityGroupFilterOptions `mapstructure:"security_group_filter" required:"false" cty:"security_group_filter"`
	RunTags                           map[string]string          `mapstructure:"run_tags" required:"false" cty:"run_tags"`
	SecurityGroupId                   string                     `mapstructure:"security_group_id" required:"false" cty:"security_group_id"`
	SecurityGroupIds                  []string                   `mapstructure:"security_group_ids" required:"false" cty:"security_group_ids"`
	SourceAmi                         string                     `mapstructure:"source_ami" required:"true" cty:"source_ami"`
	SourceAmiFilter                   AmiFilterOptions           `mapstructure:"source_ami_filter" required:"false" cty:"source_ami_filter"`
	SpotInstanceTypes                 []string                   `mapstructure:"spot_instance_types" required:"false" cty:"spot_instance_types"`
	SpotPrice                         string                     `mapstructure:"spot_price" required:"false" cty:"spot_price"`
	SpotPriceAutoProduct              string                     `mapstructure:"spot_price_auto_product" required:"false" cty:"spot_price_auto_product"`
	SpotTags                          map[string]string          `mapstructure:"spot_tags" required:"false" cty:"spot_tags"`
	SubnetFilter                      SubnetFilterOptions        `mapstructure:"subnet_filter" required:"false" cty:"subnet_filter"`
	SubnetId                          string                     `mapstructure:"subnet_id" required:"false" cty:"subnet_id"`
	TemporaryKeyPairName              string                     `mapstructure:"temporary_key_pair_name" required:"false" cty:"temporary_key_pair_name"`
	TemporarySGSourceCidrs            []string                   `mapstructure:"temporary_security_group_source_cidrs" required:"false" cty:"temporary_security_group_source_cidrs"`
	UserData                          string                     `mapstructure:"user_data" required:"false" cty:"user_data"`
	UserDataFile                      string                     `mapstructure:"user_data_file" required:"false" cty:"user_data_file"`
	VpcFilter                         VpcFilterOptions           `mapstructure:"vpc_filter" required:"false" cty:"vpc_filter"`
	VpcId                             string                     `mapstructure:"vpc_id" required:"false" cty:"vpc_id"`
	WindowsPasswordTimeout            time.Duration              `mapstructure:"windows_password_timeout" required:"false" cty:"windows_password_timeout"`
	Type                              string                     `mapstructure:"communicator" cty:"communicator"`
	PauseBeforeConnect                time.Duration              `mapstructure:"pause_before_connecting" cty:"pause_before_connecting"`
	SSHHost                           string                     `mapstructure:"ssh_host" cty:"ssh_host"`
	SSHPort                           int                        `mapstructure:"ssh_port" cty:"ssh_port"`
	SSHUsername                       string                     `mapstructure:"ssh_username" cty:"ssh_username"`
	SSHPassword                       string                     `mapstructure:"ssh_password" cty:"ssh_password"`
	SSHKeyPairName                    string                     `mapstructure:"ssh_keypair_name" cty:"ssh_keypair_name"`
	SSHTemporaryKeyPairName           string                     `mapstructure:"temporary_key_pair_name" cty:"temporary_key_pair_name"`
	SSHClearAuthorizedKeys            bool                       `mapstructure:"ssh_clear_authorized_keys" cty:"ssh_clear_authorized_keys"`
	SSHPrivateKeyFile                 string                     `mapstructure:"ssh_private_key_file" cty:"ssh_private_key_file"`
	SSHPty                            bool                       `mapstructure:"ssh_pty" cty:"ssh_pty"`
	SSHTimeout                        time.Duration              `mapstructure:"ssh_timeout" cty:"ssh_timeout"`
	SSHAgentAuth                      bool                       `mapstructure:"ssh_agent_auth" cty:"ssh_agent_auth"`
	SSHDisableAgentForwarding         bool                       `mapstructure:"ssh_disable_agent_forwarding" cty:"ssh_disable_agent_forwarding"`
	SSHHandshakeAttempts              int                        `mapstructure:"ssh_handshake_attempts" cty:"ssh_handshake_attempts"`
	SSHBastionHost                    string                     `mapstructure:"ssh_bastion_host" cty:"ssh_bastion_host"`
	SSHBastionPort                    int                        `mapstructure:"ssh_bastion_port" cty:"ssh_bastion_port"`
	SSHBastionAgentAuth               bool                       `mapstructure:"ssh_bastion_agent_auth" cty:"ssh_bastion_agent_auth"`
	SSHBastionUsername                string                     `mapstructure:"ssh_bastion_username" cty:"ssh_bastion_username"`
	SSHBastionPassword                string                     `mapstructure:"ssh_bastion_password" cty:"ssh_bastion_password"`
	SSHBastionPrivateKeyFile          string                     `mapstructure:"ssh_bastion_private_key_file" cty:"ssh_bastion_private_key_file"`
	SSHFileTransferMethod             string                     `mapstructure:"ssh_file_transfer_method" cty:"ssh_file_transfer_method"`
	SSHProxyHost                      string                     `mapstructure:"ssh_proxy_host" cty:"ssh_proxy_host"`
	SSHProxyPort                      int                        `mapstructure:"ssh_proxy_port" cty:"ssh_proxy_port"`
	SSHProxyUsername                  string                     `mapstructure:"ssh_proxy_username" cty:"ssh_proxy_username"`
	SSHProxyPassword                  string                     `mapstructure:"ssh_proxy_password" cty:"ssh_proxy_password"`
	SSHKeepAliveInterval              time.Duration              `mapstructure:"ssh_keep_alive_interval" cty:"ssh_keep_alive_interval"`
	SSHReadWriteTimeout               time.Duration              `mapstructure:"ssh_read_write_timeout" cty:"ssh_read_write_timeout"`
	SSHRemoteTunnels                  []string                   `mapstructure:"ssh_remote_tunnels" cty:"ssh_remote_tunnels"`
	SSHLocalTunnels                   []string                   `mapstructure:"ssh_local_tunnels" cty:"ssh_local_tunnels"`
	SSHPublicKey                      []byte                     `cty:"ssh_public_key"`
	SSHPrivateKey                     []byte                     `cty:"ssh_private_key"`
	WinRMUser                         string                     `mapstructure:"winrm_username" cty:"winrm_username"`
	WinRMPassword                     string                     `mapstructure:"winrm_password" cty:"winrm_password"`
	WinRMHost                         string                     `mapstructure:"winrm_host" cty:"winrm_host"`
	WinRMPort                         int                        `mapstructure:"winrm_port" cty:"winrm_port"`
	WinRMTimeout                      time.Duration              `mapstructure:"winrm_timeout" cty:"winrm_timeout"`
	WinRMUseSSL                       bool                       `mapstructure:"winrm_use_ssl" cty:"winrm_use_ssl"`
	WinRMInsecure                     bool                       `mapstructure:"winrm_insecure" cty:"winrm_insecure"`
	WinRMUseNTLM                      bool                       `mapstructure:"winrm_use_ntlm" cty:"winrm_use_ntlm"`
	SSHInterface                      string                     `mapstructure:"ssh_interface" cty:"ssh_interface"`
}

func (*RunConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"AssociatePublicIpAddress":          &hcldec.AttrSpec{Name: "associate_public_ip_address", Type: cty.Bool, Required: false},
		"AvailabilityZone":                  &hcldec.AttrSpec{Name: "availability_zone", Type: cty.String, Required: false},
		"BlockDurationMinutes":              &hcldec.AttrSpec{Name: "block_duration_minutes", Type: cty.Number, Required: false},
		"DisableStopInstance":               &hcldec.AttrSpec{Name: "disable_stop_instance", Type: cty.Bool, Required: false},
		"EbsOptimized":                      &hcldec.AttrSpec{Name: "ebs_optimized", Type: cty.Bool, Required: false},
		"EnableT2Unlimited":                 &hcldec.AttrSpec{Name: "enable_t2_unlimited", Type: cty.Bool, Required: false},
		"IamInstanceProfile":                &hcldec.AttrSpec{Name: "iam_instance_profile", Type: cty.String, Required: false},
		"InstanceInitiatedShutdownBehavior": &hcldec.AttrSpec{Name: "shutdown_behavior", Type: cty.String, Required: false},
		"InstanceType":                      &hcldec.AttrSpec{Name: "instance_type", Type: cty.String, Required: false},
		"SecurityGroupFilter":               &hcldec.BlockObjectSpec{TypeName: "SecurityGroupFilterOptions", Nested: hcldec.ObjectSpec((*SecurityGroupFilterOptions)(nil).HCL2Spec())},
		"RunTags":                           &hcldec.BlockAttrsSpec{TypeName: "run_tags", ElementType: cty.String, Required: false},
		"SecurityGroupId":                   &hcldec.AttrSpec{Name: "security_group_id", Type: cty.String, Required: false},
		"SecurityGroupIds":                  &hcldec.AttrSpec{Name: "security_group_ids", Type: cty.List(cty.String), Required: false},
		"SourceAmi":                         &hcldec.AttrSpec{Name: "source_ami", Type: cty.String, Required: false},
		"SourceAmiFilter":                   &hcldec.BlockObjectSpec{TypeName: "AmiFilterOptions", Nested: hcldec.ObjectSpec((*AmiFilterOptions)(nil).HCL2Spec())},
		"SpotInstanceTypes":                 &hcldec.AttrSpec{Name: "spot_instance_types", Type: cty.List(cty.String), Required: false},
		"SpotPrice":                         &hcldec.AttrSpec{Name: "spot_price", Type: cty.String, Required: false},
		"SpotPriceAutoProduct":              &hcldec.AttrSpec{Name: "spot_price_auto_product", Type: cty.String, Required: false},
		"SpotTags":                          &hcldec.BlockAttrsSpec{TypeName: "spot_tags", ElementType: cty.String, Required: false},
		"SubnetFilter":                      &hcldec.BlockObjectSpec{TypeName: "SubnetFilterOptions", Nested: hcldec.ObjectSpec((*SubnetFilterOptions)(nil).HCL2Spec())},
		"SubnetId":                          &hcldec.AttrSpec{Name: "subnet_id", Type: cty.String, Required: false},
		"TemporaryKeyPairName":              &hcldec.AttrSpec{Name: "temporary_key_pair_name", Type: cty.String, Required: false},
		"TemporarySGSourceCidrs":            &hcldec.AttrSpec{Name: "temporary_security_group_source_cidrs", Type: cty.List(cty.String), Required: false},
		"UserData":                          &hcldec.AttrSpec{Name: "user_data", Type: cty.String, Required: false},
		"UserDataFile":                      &hcldec.AttrSpec{Name: "user_data_file", Type: cty.String, Required: false},
		"VpcFilter":                         &hcldec.BlockObjectSpec{TypeName: "VpcFilterOptions", Nested: hcldec.ObjectSpec((*VpcFilterOptions)(nil).HCL2Spec())},
		"VpcId":                             &hcldec.AttrSpec{Name: "vpc_id", Type: cty.String, Required: false},
		"WindowsPasswordTimeout":            &hcldec.AttrSpec{Name: "windows_password_timeout", Type: cty.String, Required: false},
		"Type":                              &hcldec.AttrSpec{Name: "communicator", Type: cty.String, Required: false},
		"PauseBeforeConnect":                &hcldec.AttrSpec{Name: "pause_before_connecting", Type: cty.String, Required: false},
		"SSHHost":                           &hcldec.AttrSpec{Name: "ssh_host", Type: cty.String, Required: false},
		"SSHPort":                           &hcldec.AttrSpec{Name: "ssh_port", Type: cty.Number, Required: false},
		"SSHUsername":                       &hcldec.AttrSpec{Name: "ssh_username", Type: cty.String, Required: false},
		"SSHPassword":                       &hcldec.AttrSpec{Name: "ssh_password", Type: cty.String, Required: false},
		"SSHKeyPairName":                    &hcldec.AttrSpec{Name: "ssh_keypair_name", Type: cty.String, Required: false},
		"SSHTemporaryKeyPairName":           &hcldec.AttrSpec{Name: "temporary_key_pair_name", Type: cty.String, Required: false},
		"SSHClearAuthorizedKeys":            &hcldec.AttrSpec{Name: "ssh_clear_authorized_keys", Type: cty.Bool, Required: false},
		"SSHPrivateKeyFile":                 &hcldec.AttrSpec{Name: "ssh_private_key_file", Type: cty.String, Required: false},
		"SSHPty":                            &hcldec.AttrSpec{Name: "ssh_pty", Type: cty.Bool, Required: false},
		"SSHTimeout":                        &hcldec.AttrSpec{Name: "ssh_timeout", Type: cty.String, Required: false},
		"SSHAgentAuth":                      &hcldec.AttrSpec{Name: "ssh_agent_auth", Type: cty.Bool, Required: false},
		"SSHDisableAgentForwarding":         &hcldec.AttrSpec{Name: "ssh_disable_agent_forwarding", Type: cty.Bool, Required: false},
		"SSHHandshakeAttempts":              &hcldec.AttrSpec{Name: "ssh_handshake_attempts", Type: cty.Number, Required: false},
		"SSHBastionHost":                    &hcldec.AttrSpec{Name: "ssh_bastion_host", Type: cty.String, Required: false},
		"SSHBastionPort":                    &hcldec.AttrSpec{Name: "ssh_bastion_port", Type: cty.Number, Required: false},
		"SSHBastionAgentAuth":               &hcldec.AttrSpec{Name: "ssh_bastion_agent_auth", Type: cty.Bool, Required: false},
		"SSHBastionUsername":                &hcldec.AttrSpec{Name: "ssh_bastion_username", Type: cty.String, Required: false},
		"SSHBastionPassword":                &hcldec.AttrSpec{Name: "ssh_bastion_password", Type: cty.String, Required: false},
		"SSHBastionPrivateKeyFile":          &hcldec.AttrSpec{Name: "ssh_bastion_private_key_file", Type: cty.String, Required: false},
		"SSHFileTransferMethod":             &hcldec.AttrSpec{Name: "ssh_file_transfer_method", Type: cty.String, Required: false},
		"SSHProxyHost":                      &hcldec.AttrSpec{Name: "ssh_proxy_host", Type: cty.String, Required: false},
		"SSHProxyPort":                      &hcldec.AttrSpec{Name: "ssh_proxy_port", Type: cty.Number, Required: false},
		"SSHProxyUsername":                  &hcldec.AttrSpec{Name: "ssh_proxy_username", Type: cty.String, Required: false},
		"SSHProxyPassword":                  &hcldec.AttrSpec{Name: "ssh_proxy_password", Type: cty.String, Required: false},
		"SSHKeepAliveInterval":              &hcldec.AttrSpec{Name: "ssh_keep_alive_interval", Type: cty.String, Required: false},
		"SSHReadWriteTimeout":               &hcldec.AttrSpec{Name: "ssh_read_write_timeout", Type: cty.String, Required: false},
		"SSHRemoteTunnels":                  &hcldec.AttrSpec{Name: "ssh_remote_tunnels", Type: cty.List(cty.String), Required: false},
		"SSHLocalTunnels":                   &hcldec.AttrSpec{Name: "ssh_local_tunnels", Type: cty.List(cty.String), Required: false},
		"SSHPublicKey":                      &hcldec.AttrSpec{Name: "ssh_public_key", Type: cty.List(cty.Number), Required: false},
		"SSHPrivateKey":                     &hcldec.AttrSpec{Name: "ssh_private_key", Type: cty.List(cty.Number), Required: false},
		"WinRMUser":                         &hcldec.AttrSpec{Name: "winrm_username", Type: cty.String, Required: false},
		"WinRMPassword":                     &hcldec.AttrSpec{Name: "winrm_password", Type: cty.String, Required: false},
		"WinRMHost":                         &hcldec.AttrSpec{Name: "winrm_host", Type: cty.String, Required: false},
		"WinRMPort":                         &hcldec.AttrSpec{Name: "winrm_port", Type: cty.Number, Required: false},
		"WinRMTimeout":                      &hcldec.AttrSpec{Name: "winrm_timeout", Type: cty.String, Required: false},
		"WinRMUseSSL":                       &hcldec.AttrSpec{Name: "winrm_use_ssl", Type: cty.Bool, Required: false},
		"WinRMInsecure":                     &hcldec.AttrSpec{Name: "winrm_insecure", Type: cty.Bool, Required: false},
		"WinRMUseNTLM":                      &hcldec.AttrSpec{Name: "winrm_use_ntlm", Type: cty.Bool, Required: false},
		"SSHInterface":                      &hcldec.AttrSpec{Name: "ssh_interface", Type: cty.String, Required: false},
	}
	return s
}

type FlatSecurityGroupFilterOptions struct {
	Filters map[*string]*string `cty:"filters"`
}

func (*SecurityGroupFilterOptions) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"Filters": &hcldec.BlockAttrsSpec{TypeName: "filters", ElementType: cty.String, Required: false},
	}
	return s
}

type FlatSubnetFilterOptions struct {
	Filters  map[*string]*string `cty:"filters"`
	MostFree bool                `mapstructure:"most_free" cty:"most_free"`
	Random   bool                `mapstructure:"random" cty:"random"`
}

func (*SubnetFilterOptions) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"Filters":  &hcldec.BlockAttrsSpec{TypeName: "filters", ElementType: cty.String, Required: false},
		"MostFree": &hcldec.AttrSpec{Name: "most_free", Type: cty.Bool, Required: false},
		"Random":   &hcldec.AttrSpec{Name: "random", Type: cty.Bool, Required: false},
	}
	return s
}

type FlatVpcFilterOptions struct {
	Filters map[*string]*string `cty:"filters"`
}

func (*VpcFilterOptions) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"Filters": &hcldec.BlockAttrsSpec{TypeName: "filters", ElementType: cty.String, Required: false},
	}
	return s
}
