// Code generated by "mapstructure-to-hcl2 -type AccessConfig"; DO NOT EDIT.
package common

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

type FlatAccessConfig struct {
	AccessKey             string `mapstructure:"access_key" cty:"access_key"`
	CustomEndpointOAPI    string `mapstructure:"custom_endpoint_oapi" cty:"custom_endpoint_oapi"`
	InsecureSkipTLSVerify bool   `mapstructure:"insecure_skip_tls_verify" cty:"insecure_skip_tls_verify"`
	MFACode               string `mapstructure:"mfa_code" cty:"mfa_code"`
	ProfileName           string `mapstructure:"profile" cty:"profile"`
	RawRegion             string `mapstructure:"region" cty:"region"`
	SecretKey             string `mapstructure:"secret_key" cty:"secret_key"`
	SkipValidation        bool   `mapstructure:"skip_region_validation" cty:"skip_region_validation"`
	SkipMetadataApiCheck  bool   `mapstructure:"skip_metadata_api_check" cty:"skip_metadata_api_check"`
	Token                 string `mapstructure:"token" cty:"token"`
}

func (*AccessConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"AccessKey":             &hcldec.AttrSpec{Name: "access_key", Type: cty.String, Required: false},
		"CustomEndpointOAPI":    &hcldec.AttrSpec{Name: "custom_endpoint_oapi", Type: cty.String, Required: false},
		"InsecureSkipTLSVerify": &hcldec.AttrSpec{Name: "insecure_skip_tls_verify", Type: cty.Bool, Required: false},
		"MFACode":               &hcldec.AttrSpec{Name: "mfa_code", Type: cty.String, Required: false},
		"ProfileName":           &hcldec.AttrSpec{Name: "profile", Type: cty.String, Required: false},
		"RawRegion":             &hcldec.AttrSpec{Name: "region", Type: cty.String, Required: false},
		"SecretKey":             &hcldec.AttrSpec{Name: "secret_key", Type: cty.String, Required: false},
		"SkipValidation":        &hcldec.AttrSpec{Name: "skip_region_validation", Type: cty.Bool, Required: false},
		"SkipMetadataApiCheck":  &hcldec.AttrSpec{Name: "skip_metadata_api_check", Type: cty.Bool, Required: false},
		"Token":                 &hcldec.AttrSpec{Name: "token", Type: cty.String, Required: false},
	}
	return s
}
