// Code generated by "mapstructure-to-hcl2 -type OMIConfig"; DO NOT EDIT.
package common

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

type FlatOMIConfig struct {
	OMIName                 string   `mapstructure:"omi_name" cty:"omi_name"`
	OMIDescription          string   `mapstructure:"omi_description" cty:"omi_description"`
	OMIVirtType             string   `mapstructure:"omi_virtualization_type" cty:"omi_virtualization_type"`
	OMIAccountIDs           []string `mapstructure:"omi_account_ids" cty:"omi_account_ids"`
	OMIGroups               []string `mapstructure:"omi_groups" cty:"omi_groups"`
	OMIProductCodes         []string `mapstructure:"omi_product_codes" cty:"omi_product_codes"`
	OMIRegions              []string `mapstructure:"omi_regions" cty:"omi_regions"`
	OMISkipRegionValidation bool     `mapstructure:"skip_region_validation" cty:"skip_region_validation"`
	OMITags                 TagMap   `mapstructure:"tags" cty:"tags"`
	OMIForceDeregister      bool     `mapstructure:"force_deregister" cty:"force_deregister"`
	OMIForceDeleteSnapshot  bool     `mapstructure:"force_delete_snapshot" cty:"force_delete_snapshot"`
	SnapshotTags            TagMap   `mapstructure:"snapshot_tags" cty:"snapshot_tags"`
	SnapshotAccountIDs      []string `mapstructure:"snapshot_account_ids" cty:"snapshot_account_ids"`
	SnapshotGroups          []string `mapstructure:"snapshot_groups" cty:"snapshot_groups"`
}

func (*OMIConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"OMIName":                 &hcldec.AttrSpec{Name: "omi_name", Type: cty.String, Required: false},
		"OMIDescription":          &hcldec.AttrSpec{Name: "omi_description", Type: cty.String, Required: false},
		"OMIVirtType":             &hcldec.AttrSpec{Name: "omi_virtualization_type", Type: cty.String, Required: false},
		"OMIAccountIDs":           &hcldec.AttrSpec{Name: "omi_account_ids", Type: cty.List(cty.String), Required: false},
		"OMIGroups":               &hcldec.AttrSpec{Name: "omi_groups", Type: cty.List(cty.String), Required: false},
		"OMIProductCodes":         &hcldec.AttrSpec{Name: "omi_product_codes", Type: cty.List(cty.String), Required: false},
		"OMIRegions":              &hcldec.AttrSpec{Name: "omi_regions", Type: cty.List(cty.String), Required: false},
		"OMISkipRegionValidation": &hcldec.AttrSpec{Name: "skip_region_validation", Type: cty.Bool, Required: false},
		"OMITags":                 &hcldec.BlockAttrsSpec{TypeName: "TagMap", ElementType: cty.String, Required: false},
		"OMIForceDeregister":      &hcldec.AttrSpec{Name: "force_deregister", Type: cty.Bool, Required: false},
		"OMIForceDeleteSnapshot":  &hcldec.AttrSpec{Name: "force_delete_snapshot", Type: cty.Bool, Required: false},
		"SnapshotTags":            &hcldec.BlockAttrsSpec{TypeName: "TagMap", ElementType: cty.String, Required: false},
		"SnapshotAccountIDs":      &hcldec.AttrSpec{Name: "snapshot_account_ids", Type: cty.List(cty.String), Required: false},
		"SnapshotGroups":          &hcldec.AttrSpec{Name: "snapshot_groups", Type: cty.List(cty.String), Required: false},
	}
	return s
}
