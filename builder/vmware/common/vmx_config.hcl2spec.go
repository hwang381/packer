// Code generated by "mapstructure-to-hcl2 -type VMXConfig"; DO NOT EDIT.
package common

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

type FlatVMXConfig struct {
	VMXData           map[string]string `mapstructure:"vmx_data" required:"false" cty:"vmx_data"`
	VMXDataPost       map[string]string `mapstructure:"vmx_data_post" required:"false" cty:"vmx_data_post"`
	VMXRemoveEthernet bool              `mapstructure:"vmx_remove_ethernet_interfaces" required:"false" cty:"vmx_remove_ethernet_interfaces"`
	VMXDisplayName    string            `mapstructure:"display_name" required:"false" cty:"display_name"`
}

func (*VMXConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"VMXData":           &hcldec.BlockAttrsSpec{TypeName: "vmx_data", ElementType: cty.String, Required: false},
		"VMXDataPost":       &hcldec.BlockAttrsSpec{TypeName: "vmx_data_post", ElementType: cty.String, Required: false},
		"VMXRemoveEthernet": &hcldec.AttrSpec{Name: "vmx_remove_ethernet_interfaces", Type: cty.Bool, Required: false},
		"VMXDisplayName":    &hcldec.AttrSpec{Name: "display_name", Type: cty.String, Required: false},
	}
	return s
}
