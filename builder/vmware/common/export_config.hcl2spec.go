// Code generated by "mapstructure-to-hcl2 -type ExportConfig"; DO NOT EDIT.
package common

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

type FlatExportConfig struct {
	Format         string   `mapstructure:"format" required:"false" cty:"format"`
	OVFToolOptions []string `mapstructure:"ovftool_options" required:"false" cty:"ovftool_options"`
	SkipExport     bool     `mapstructure:"skip_export" required:"false" cty:"skip_export"`
	KeepRegistered bool     `mapstructure:"keep_registered" required:"false" cty:"keep_registered"`
	SkipCompaction bool     `mapstructure:"skip_compaction" required:"false" cty:"skip_compaction"`
}

func (*ExportConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"Format":         &hcldec.AttrSpec{Name: "format", Type: cty.String, Required: false},
		"OVFToolOptions": &hcldec.AttrSpec{Name: "ovftool_options", Type: cty.List(cty.String), Required: false},
		"SkipExport":     &hcldec.AttrSpec{Name: "skip_export", Type: cty.Bool, Required: false},
		"KeepRegistered": &hcldec.AttrSpec{Name: "keep_registered", Type: cty.Bool, Required: false},
		"SkipCompaction": &hcldec.AttrSpec{Name: "skip_compaction", Type: cty.Bool, Required: false},
	}
	return s
}
