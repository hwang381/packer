// Code generated by "mapstructure-to-hcl2 -type TargetImageConfig"; DO NOT EDIT.
package triton

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

type FlatTargetImageConfig struct {
	ImageName        string            `mapstructure:"image_name" required:"true" cty:"image_name"`
	ImageVersion     string            `mapstructure:"image_version" required:"true" cty:"image_version"`
	ImageDescription string            `mapstructure:"image_description" required:"false" cty:"image_description"`
	ImageHomepage    string            `mapstructure:"image_homepage" required:"false" cty:"image_homepage"`
	ImageEULA        string            `mapstructure:"image_eula_url" required:"false" cty:"image_eula_url"`
	ImageACL         []string          `mapstructure:"image_acls" required:"false" cty:"image_acls"`
	ImageTags        map[string]string `mapstructure:"image_tags" required:"false" cty:"image_tags"`
}

func (*TargetImageConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"ImageName":        &hcldec.AttrSpec{Name: "image_name", Type: cty.String, Required: false},
		"ImageVersion":     &hcldec.AttrSpec{Name: "image_version", Type: cty.String, Required: false},
		"ImageDescription": &hcldec.AttrSpec{Name: "image_description", Type: cty.String, Required: false},
		"ImageHomepage":    &hcldec.AttrSpec{Name: "image_homepage", Type: cty.String, Required: false},
		"ImageEULA":        &hcldec.AttrSpec{Name: "image_eula_url", Type: cty.String, Required: false},
		"ImageACL":         &hcldec.AttrSpec{Name: "image_acls", Type: cty.List(cty.String), Required: false},
		"ImageTags":        &hcldec.BlockAttrsSpec{TypeName: "image_tags", ElementType: cty.String, Required: false},
	}
	return s
}

type FlatTargetImageConfig struct {
	ImageName        string            `mapstructure:"image_name" required:"true" cty:"image_name"`
	ImageVersion     string            `mapstructure:"image_version" required:"true" cty:"image_version"`
	ImageDescription string            `mapstructure:"image_description" required:"false" cty:"image_description"`
	ImageHomepage    string            `mapstructure:"image_homepage" required:"false" cty:"image_homepage"`
	ImageEULA        string            `mapstructure:"image_eula_url" required:"false" cty:"image_eula_url"`
	ImageACL         []string          `mapstructure:"image_acls" required:"false" cty:"image_acls"`
	ImageTags        map[string]string `mapstructure:"image_tags" required:"false" cty:"image_tags"`
}

func (*TargetImageConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"ImageName":        &hcldec.AttrSpec{Name: "image_name", Type: cty.String, Required: false},
		"ImageVersion":     &hcldec.AttrSpec{Name: "image_version", Type: cty.String, Required: false},
		"ImageDescription": &hcldec.AttrSpec{Name: "image_description", Type: cty.String, Required: false},
		"ImageHomepage":    &hcldec.AttrSpec{Name: "image_homepage", Type: cty.String, Required: false},
		"ImageEULA":        &hcldec.AttrSpec{Name: "image_eula_url", Type: cty.String, Required: false},
		"ImageACL":         &hcldec.AttrSpec{Name: "image_acls", Type: cty.List(cty.String), Required: false},
		"ImageTags":        &hcldec.BlockAttrsSpec{TypeName: "image_tags", ElementType: cty.String, Required: false},
	}
	return s
}
