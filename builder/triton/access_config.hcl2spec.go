// Code generated by "mapstructure-to-hcl2 -type AccessConfig"; DO NOT EDIT.
package triton

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

type FlatAccessConfig struct {
	Endpoint              string `mapstructure:"triton_url" required:"false" cty:"triton_url"`
	Account               string `mapstructure:"triton_account" required:"true" cty:"triton_account"`
	Username              string `mapstructure:"triton_user" required:"false" cty:"triton_user"`
	KeyID                 string `mapstructure:"triton_key_id" required:"true" cty:"triton_key_id"`
	KeyMaterial           string `mapstructure:"triton_key_material" required:"false" cty:"triton_key_material"`
	InsecureSkipTLSVerify bool   `mapstructure:"insecure_skip_tls_verify" required:"false" cty:"insecure_skip_tls_verify"`
}

func (*AccessConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"Endpoint":              &hcldec.AttrSpec{Name: "triton_url", Type: cty.String, Required: false},
		"Account":               &hcldec.AttrSpec{Name: "triton_account", Type: cty.String, Required: false},
		"Username":              &hcldec.AttrSpec{Name: "triton_user", Type: cty.String, Required: false},
		"KeyID":                 &hcldec.AttrSpec{Name: "triton_key_id", Type: cty.String, Required: false},
		"KeyMaterial":           &hcldec.AttrSpec{Name: "triton_key_material", Type: cty.String, Required: false},
		"InsecureSkipTLSVerify": &hcldec.AttrSpec{Name: "insecure_skip_tls_verify", Type: cty.Bool, Required: false},
	}
	return s
}

type FlatAccessConfig struct {
	Endpoint              string `mapstructure:"triton_url" required:"false" cty:"triton_url"`
	Account               string `mapstructure:"triton_account" required:"true" cty:"triton_account"`
	Username              string `mapstructure:"triton_user" required:"false" cty:"triton_user"`
	KeyID                 string `mapstructure:"triton_key_id" required:"true" cty:"triton_key_id"`
	KeyMaterial           string `mapstructure:"triton_key_material" required:"false" cty:"triton_key_material"`
	InsecureSkipTLSVerify bool   `mapstructure:"insecure_skip_tls_verify" required:"false" cty:"insecure_skip_tls_verify"`
}

func (*AccessConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"Endpoint":              &hcldec.AttrSpec{Name: "triton_url", Type: cty.String, Required: false},
		"Account":               &hcldec.AttrSpec{Name: "triton_account", Type: cty.String, Required: false},
		"Username":              &hcldec.AttrSpec{Name: "triton_user", Type: cty.String, Required: false},
		"KeyID":                 &hcldec.AttrSpec{Name: "triton_key_id", Type: cty.String, Required: false},
		"KeyMaterial":           &hcldec.AttrSpec{Name: "triton_key_material", Type: cty.String, Required: false},
		"InsecureSkipTLSVerify": &hcldec.AttrSpec{Name: "insecure_skip_tls_verify", Type: cty.Bool, Required: false},
	}
	return s
}
