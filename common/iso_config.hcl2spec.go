// Code generated by "mapstructure-to-hcl2 -type ISOConfig"; DO NOT EDIT.
package common

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

type FlatISOConfig struct {
	ISOChecksum     string   `mapstructure:"iso_checksum" required:"true" cty:"iso_checksum"`
	ISOChecksumURL  string   `mapstructure:"iso_checksum_url" cty:"iso_checksum_url"`
	ISOChecksumType string   `mapstructure:"iso_checksum_type" cty:"iso_checksum_type"`
	RawSingleISOUrl string   `mapstructure:"iso_url" required:"true" cty:"iso_url"`
	ISOUrls         []string `mapstructure:"iso_urls" cty:"iso_urls"`
	TargetPath      string   `mapstructure:"iso_target_path" cty:"iso_target_path"`
	TargetExtension string   `mapstructure:"iso_target_extension" cty:"iso_target_extension"`
}

func (*ISOConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"ISOChecksum":     &hcldec.AttrSpec{Name: "iso_checksum", Type: cty.String, Required: false},
		"ISOChecksumURL":  &hcldec.AttrSpec{Name: "iso_checksum_url", Type: cty.String, Required: false},
		"ISOChecksumType": &hcldec.AttrSpec{Name: "iso_checksum_type", Type: cty.String, Required: false},
		"RawSingleISOUrl": &hcldec.AttrSpec{Name: "iso_url", Type: cty.String, Required: false},
		"ISOUrls":         &hcldec.AttrSpec{Name: "iso_urls", Type: cty.List(cty.String), Required: false},
		"TargetPath":      &hcldec.AttrSpec{Name: "iso_target_path", Type: cty.String, Required: false},
		"TargetExtension": &hcldec.AttrSpec{Name: "iso_target_extension", Type: cty.String, Required: false},
	}
	return s
}
