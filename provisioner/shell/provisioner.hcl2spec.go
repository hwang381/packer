// Code generated by "mapstructure-to-hcl2 -type Config"; DO NOT EDIT.
package shell

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
	"time"
)

type FlatConfig struct {
	PackerBuildName      string            `mapstructure:"packer_build_name" cty:"packer_build_name"`
	PackerBuilderType    string            `mapstructure:"packer_builder_type" cty:"packer_builder_type"`
	PackerDebug          bool              `mapstructure:"packer_debug" cty:"packer_debug"`
	PackerForce          bool              `mapstructure:"packer_force" cty:"packer_force"`
	PackerOnError        string            `mapstructure:"packer_on_error" cty:"packer_on_error"`
	PackerUserVars       map[string]string `mapstructure:"packer_user_variables" cty:"packer_user_variables"`
	PackerSensitiveVars  []string          `mapstructure:"packer_sensitive_variables" cty:"packer_sensitive_variables"`
	Binary               bool              `cty:"binary"`
	ExecuteCommand       string            `mapstructure:"execute_command" cty:"execute_command"`
	Inline               []string          `cty:"inline"`
	RemotePath           string            `mapstructure:"remote_path" cty:"remote_path"`
	Script               string            `cty:"script"`
	Scripts              []string          `cty:"scripts"`
	ValidExitCodes       []int             `mapstructure:"valid_exit_codes" cty:"valid_exit_codes"`
	Vars                 []string          `mapstructure:"environment_vars" cty:"environment_vars"`
	InlineShebang        string            `mapstructure:"inline_shebang" cty:"inline_shebang"`
	RawPauseAfter        string            `mapstructure:"pause_after" cty:"pause_after"`
	PauseAfter           time.Duration     `cty:"pause_after"`
	UseEnvVarFile        bool              `mapstructure:"use_env_var_file" cty:"use_env_var_file"`
	RemoteFolder         string            `mapstructure:"remote_folder" cty:"remote_folder"`
	RemoteFile           string            `mapstructure:"remote_file" cty:"remote_file"`
	RawStartRetryTimeout string            `mapstructure:"start_retry_timeout" cty:"start_retry_timeout"`
	SkipClean            bool              `mapstructure:"skip_clean" cty:"skip_clean"`
	ExpectDisconnect     bool              `mapstructure:"expect_disconnect" cty:"expect_disconnect"`
}

func (*Config) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"PackerBuildName":      &hcldec.AttrSpec{Name: "packer_build_name", Type: cty.String, Required: false},
		"PackerBuilderType":    &hcldec.AttrSpec{Name: "packer_builder_type", Type: cty.String, Required: false},
		"PackerDebug":          &hcldec.AttrSpec{Name: "packer_debug", Type: cty.Bool, Required: false},
		"PackerForce":          &hcldec.AttrSpec{Name: "packer_force", Type: cty.Bool, Required: false},
		"PackerOnError":        &hcldec.AttrSpec{Name: "packer_on_error", Type: cty.String, Required: false},
		"PackerUserVars":       &hcldec.BlockAttrsSpec{TypeName: "packer_user_variables", ElementType: cty.String, Required: false},
		"PackerSensitiveVars":  &hcldec.AttrSpec{Name: "packer_sensitive_variables", Type: cty.List(cty.String), Required: false},
		"Binary":               &hcldec.AttrSpec{Name: "binary", Type: cty.Bool, Required: false},
		"ExecuteCommand":       &hcldec.AttrSpec{Name: "execute_command", Type: cty.String, Required: false},
		"Inline":               &hcldec.AttrSpec{Name: "inline", Type: cty.List(cty.String), Required: false},
		"RemotePath":           &hcldec.AttrSpec{Name: "remote_path", Type: cty.String, Required: false},
		"Script":               &hcldec.AttrSpec{Name: "script", Type: cty.String, Required: false},
		"Scripts":              &hcldec.AttrSpec{Name: "scripts", Type: cty.List(cty.String), Required: false},
		"ValidExitCodes":       &hcldec.AttrSpec{Name: "valid_exit_codes", Type: cty.List(cty.Number), Required: false},
		"Vars":                 &hcldec.AttrSpec{Name: "environment_vars", Type: cty.List(cty.String), Required: false},
		"InlineShebang":        &hcldec.AttrSpec{Name: "inline_shebang", Type: cty.String, Required: false},
		"RawPauseAfter":        &hcldec.AttrSpec{Name: "pause_after", Type: cty.String, Required: false},
		"PauseAfter":           &hcldec.AttrSpec{Name: "pause_after", Type: cty.String, Required: false},
		"UseEnvVarFile":        &hcldec.AttrSpec{Name: "use_env_var_file", Type: cty.Bool, Required: false},
		"RemoteFolder":         &hcldec.AttrSpec{Name: "remote_folder", Type: cty.String, Required: false},
		"RemoteFile":           &hcldec.AttrSpec{Name: "remote_file", Type: cty.String, Required: false},
		"RawStartRetryTimeout": &hcldec.AttrSpec{Name: "start_retry_timeout", Type: cty.String, Required: false},
		"SkipClean":            &hcldec.AttrSpec{Name: "skip_clean", Type: cty.Bool, Required: false},
		"ExpectDisconnect":     &hcldec.AttrSpec{Name: "expect_disconnect", Type: cty.Bool, Required: false},
	}
	return s
}
