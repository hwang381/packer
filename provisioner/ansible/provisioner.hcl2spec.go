// Code generated by "mapstructure-to-hcl2 -type Config"; DO NOT EDIT.
package ansible

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

type FlatConfig struct {
	PackerBuildName      string            `mapstructure:"packer_build_name" cty:"packer_build_name"`
	PackerBuilderType    string            `mapstructure:"packer_builder_type" cty:"packer_builder_type"`
	PackerDebug          bool              `mapstructure:"packer_debug" cty:"packer_debug"`
	PackerForce          bool              `mapstructure:"packer_force" cty:"packer_force"`
	PackerOnError        string            `mapstructure:"packer_on_error" cty:"packer_on_error"`
	PackerUserVars       map[string]string `mapstructure:"packer_user_variables" cty:"packer_user_variables"`
	PackerSensitiveVars  []string          `mapstructure:"packer_sensitive_variables" cty:"packer_sensitive_variables"`
	Command              string            `cty:"command"`
	ExtraArguments       []string          `mapstructure:"extra_arguments" cty:"extra_arguments"`
	AnsibleEnvVars       []string          `mapstructure:"ansible_env_vars" cty:"ansible_env_vars"`
	PlaybookFile         string            `mapstructure:"playbook_file" cty:"playbook_file"`
	Groups               []string          `mapstructure:"groups" cty:"groups"`
	EmptyGroups          []string          `mapstructure:"empty_groups" cty:"empty_groups"`
	HostAlias            string            `mapstructure:"host_alias" cty:"host_alias"`
	User                 string            `mapstructure:"user" cty:"user"`
	LocalPort            int               `mapstructure:"local_port" cty:"local_port"`
	SSHHostKeyFile       string            `mapstructure:"ssh_host_key_file" cty:"ssh_host_key_file"`
	SSHAuthorizedKeyFile string            `mapstructure:"ssh_authorized_key_file" cty:"ssh_authorized_key_file"`
	SFTPCmd              string            `mapstructure:"sftp_command" cty:"sftp_command"`
	SkipVersionCheck     bool              `mapstructure:"skip_version_check" cty:"skip_version_check"`
	UseSFTP              bool              `mapstructure:"use_sftp" cty:"use_sftp"`
	InventoryDirectory   string            `mapstructure:"inventory_directory" cty:"inventory_directory"`
	InventoryFile        string            `mapstructure:"inventory_file" cty:"inventory_file"`
	GalaxyFile           string            `mapstructure:"galaxy_file" cty:"galaxy_file"`
	GalaxyCommand        string            `mapstructure:"galaxy_command" cty:"galaxy_command"`
	GalaxyForceInstall   bool              `mapstructure:"galaxy_force_install" cty:"galaxy_force_install"`
	RolesPath            string            `mapstructure:"roles_path" cty:"roles_path"`
}

func (*Config) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"PackerBuildName":      &hcldec.AttrSpec{Name: "packer_build_name", Type: cty.String, Required: false},
		"PackerBuilderType":    &hcldec.AttrSpec{Name: "packer_builder_type", Type: cty.String, Required: false},
		"PackerDebug":          &hcldec.AttrSpec{Name: "packer_debug", Type: cty.Bool, Required: false},
		"PackerForce":          &hcldec.AttrSpec{Name: "packer_force", Type: cty.Bool, Required: false},
		"PackerOnError":        &hcldec.AttrSpec{Name: "packer_on_error", Type: cty.String, Required: false},
		"PackerUserVars":       &hcldec.BlockAttrsSpec{TypeName: "packer_user_variables", ElementType: cty.String, Required: false},
		"PackerSensitiveVars":  &hcldec.AttrSpec{Name: "packer_sensitive_variables", Type: cty.List(cty.String), Required: false},
		"Command":              &hcldec.AttrSpec{Name: "command", Type: cty.String, Required: false},
		"ExtraArguments":       &hcldec.AttrSpec{Name: "extra_arguments", Type: cty.List(cty.String), Required: false},
		"AnsibleEnvVars":       &hcldec.AttrSpec{Name: "ansible_env_vars", Type: cty.List(cty.String), Required: false},
		"PlaybookFile":         &hcldec.AttrSpec{Name: "playbook_file", Type: cty.String, Required: false},
		"Groups":               &hcldec.AttrSpec{Name: "groups", Type: cty.List(cty.String), Required: false},
		"EmptyGroups":          &hcldec.AttrSpec{Name: "empty_groups", Type: cty.List(cty.String), Required: false},
		"HostAlias":            &hcldec.AttrSpec{Name: "host_alias", Type: cty.String, Required: false},
		"User":                 &hcldec.AttrSpec{Name: "user", Type: cty.String, Required: false},
		"LocalPort":            &hcldec.AttrSpec{Name: "local_port", Type: cty.Number, Required: false},
		"SSHHostKeyFile":       &hcldec.AttrSpec{Name: "ssh_host_key_file", Type: cty.String, Required: false},
		"SSHAuthorizedKeyFile": &hcldec.AttrSpec{Name: "ssh_authorized_key_file", Type: cty.String, Required: false},
		"SFTPCmd":              &hcldec.AttrSpec{Name: "sftp_command", Type: cty.String, Required: false},
		"SkipVersionCheck":     &hcldec.AttrSpec{Name: "skip_version_check", Type: cty.Bool, Required: false},
		"UseSFTP":              &hcldec.AttrSpec{Name: "use_sftp", Type: cty.Bool, Required: false},
		"InventoryDirectory":   &hcldec.AttrSpec{Name: "inventory_directory", Type: cty.String, Required: false},
		"InventoryFile":        &hcldec.AttrSpec{Name: "inventory_file", Type: cty.String, Required: false},
		"GalaxyFile":           &hcldec.AttrSpec{Name: "galaxy_file", Type: cty.String, Required: false},
		"GalaxyCommand":        &hcldec.AttrSpec{Name: "galaxy_command", Type: cty.String, Required: false},
		"GalaxyForceInstall":   &hcldec.AttrSpec{Name: "galaxy_force_install", Type: cty.Bool, Required: false},
		"RolesPath":            &hcldec.AttrSpec{Name: "roles_path", Type: cty.String, Required: false},
	}
	return s
}
